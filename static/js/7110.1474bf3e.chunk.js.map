{"version":3,"file":"static/js/7110.1474bf3e.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/utils/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, csvOptions) {\n  if (typeof value === 'string') {\n    if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n      const escapedValue = value.replace(/\"/g, '\"\"');\n      // Make sure value containing delimiter or line break won't be split into multiple cells\n      if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n        return `\"${escapedValue}\"`;\n      }\n      if (csvOptions.escapeFormulas) {\n        // See https://owasp.org/www-community/attacks/CSV_Injection\n        if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n          return `'${escapedValue}`;\n        }\n      }\n      return escapedValue;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel ?? getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if (rowNode?.type === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== previousSize.current?.height;\n    const hasWidthChanged = width !== previousSize.current?.width;\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (newDimensions.viewportInnerSize.width !== prevDimensions.viewportInnerSize.width || newDimensions.viewportInnerSize.height !== prevDimensions.viewportInnerSize.height) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n    gridFooterElement.style.position = 'absolute';\n    gridFooterElement.style.width = '100%';\n    gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBufferPx: 150,\n  rowBufferPx: 150,\n  rows: [],\n  rowSelection: true,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableColumnSorting: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  resizeThrottleMs: 60,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166,\n  autosizeOnMount: false,\n  disableAutosize: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots]);\n};","import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const themedProps = _extends({}, (_objectDestructuringEmpty(allProps), allProps));\n    return groupForwardedProps(themedProps);\n  }, [allProps]);\n}","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: true,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align ?? 'left'\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"height\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { randomNumberBetween } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst randomWidth = randomNumberBetween(10000, 20, 80);\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      height\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  const contentWidth = Math.round(randomWidth());\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      height,\n      maxWidth: width,\n      minWidth: width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`,\n      height: 25\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  field: PropTypes.string.isRequired,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder,\n    disabled\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} + \n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    // The selector we really want here is `:first-child`, but emotion thinks it knows better than use what we\n    // want and prints a warning to the console if we use it, about :first-child being \"unsafe\" in an SSR context.\n    // https://github.com/emotion-js/emotion/issues/1105\n    // Using `:first-of-type instead` is ironically less \"safe\" because if all our elements aren't `div`, this style\n    // will fail to apply.\n    [`.${c.main} > *:first-of-type`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = _extends({}, rootProps, {\n    density\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0,\n  '&::after': {\n    content: '\" \"',\n    position: 'absolute',\n    zIndex: 5,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 1,\n    width: 'var(--DataGrid-rowWidth)',\n    backgroundColor: 'var(--DataGrid-rowBorderColor)'\n  }\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const classes = useUtilityClasses(rootProps, dimensions);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), rows.length > 0 && /*#__PURE__*/_jsx(SpaceFiller, {}), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutoGeneratedRow } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutoGeneratedRow(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      sortModelDisableMultiColumnsSortingWarning();\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useResizeObserver } from '../../utils/useResizeObserver';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = rowIndexInPage === rowModels.length - 1;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible\n      }, rowProps), id));\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(contentHeight, 1);\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height\n    };\n    if (rootProps.autoHeight) {\n      if (currentPage.rows.length === 0) {\n        size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n      } else {\n        size.height = contentHeight;\n      }\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      tabIndex: -1,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation'\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","action","hover","inProps","ref","className","component","style","other","Boolean","children","classes","slots","useUtilityClasses","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","Store","create","value","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","EventManager","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","undefined","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","useGridRefs","useTheme","isFirstEffect","setState","useGridTheme","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","rootProps","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","csvOptions","shouldAppendQuotes","escapeFormulas","escapedValue","replace","delimiter","some","includes","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","String","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","opacity","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","top","row","bottomPinnedRowsIds","bottom","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","CSVBody","acc","getCellParams","serializeRow","trim","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","left","right","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","minWidth","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","columnHeadersContainerRef","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","b","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","items","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","loadingPropBeforePartialUpdates","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","resetColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","disableEval","filteringResult","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","filterApi","unstable_applyFilters","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","columnsLookup","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","sizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","initialHeights","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","main","overflow","contain","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","position","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","toLowerCase","altKey","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","columnHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","parseFloat","hasHeightChanged","hasWidthChanged","renderContext","lastRowIndex","firstRowIndex","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","sx","forwardedProps","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseCheckbox","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","startsWith","groupForwardedProps","TypeError","_objectDestructuringEmpty","overrides","computeSlots","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","role","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderTop","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","getCellOffsetStyle","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","handleRef","scrollbarWidth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","rowReordering","minHeight","numberOfBaseSizes","maximumSize","rowStyle","maxHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","sectionIndex","leftCells","rightCells","middleColumnsLength","cells","eventHandlers","expandedWidth","emptyCellWidth","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridScrollbarFillerCell","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","zIndex","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","showNoResultsOverlay","overlay","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","o","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","cellParamsWithAPI","e","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","useForkRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","padding","border","cellStyle","activeElement","focusableElement","scrollPosition","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","color","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","randomWidth","Memoized","contentWidth","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","GridColumnHeaderSortIcon","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderTitleRoot","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","every","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","lineHeight","outlineWidth","outlineOffset","transition","transitions","duration","shorter","borderBottomWidth","borderBottomStyle","marginRight","marginLeft","touchAction","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","gamma","f","overlayColor","rgb","GridPanelAnchor","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","Element","flexGrow","GridMainContainer","ariaAttributes","pinnedRowsCount","treeData","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","virtualScroller","GridVirtualScroller","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","ceil","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","isMultipleRowSelectionEnabled","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","verticalBuffer","MINIMUM_COLUMN_WIDTH","buffer","bufferForDirection","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","isDevEnvironment","useResizeObserver","fnRef","frameID","observer","cancelAnimationFrame","useRunOnce","condition","didRun","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","rest","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isTabKey","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","call","randomNumberBetween","seed","imul","deepClone","obj","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}